import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import styles from "@/styles/Home.module.css";
import axios from "axios";
import { useState } from "react";
import styled from "styled-components";

const inter = Inter({ subsets: ["latin"] });

const Flex = styled.div`
  display: flex;
  flex-direction: column;
  align-items: center;
`;

const Input = styled.input`
  border-radius: 3rem;
  min-width: 400px;
`;

const Info = styled.p`
  font-size: 14pt;
`;

const Button = styled.button`
  background-color: #87c1ff;
  border-radius: 3rem;
  font-weight: 800;
`;

export default function Home() {
  const [location, setLocation] = useState("");
  const [data, setData] = useState({});
  const [weather, setWeather] = useState();
  const [errorMessage, setErrorMessage] = useState("");
  const [main, setMain] = useState();
  const [wind, setWind] = useState();
  const [input, setInput] = useState(true);

  var apiKey = "ba988e7f07261180e594cc3bafb18dbf";
  var lang = "en";
  var units = "metric";
  const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&units=${units}&appid=${apiKey}&lang=${lang}`;

  const searchLocation = (event) => {
    if (event.key === "Enter") {
      axios
        .get(url)
        .then((response) => {
          console.clear();
          setData(response.data);

          setWeather(response.data.weather);
          console.log(response.data);
          setMain(response.data.main);
          setWind(response.data.wind);
          setInput(false);
          setErrorMessage("");
        })
        .catch((err) => {
          console.log(err);
          setErrorMessage("Please enter a new location");
          setData({});
          setWeather();
          setMain();
          setWind();
        });
      setLocation("");
    }
  };
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1>How's the weather over there?</h1>
        {errorMessage}
        {input && (
          <Flex>
            <p>
              Enter a city below and hit "Enter" to see its weather details.
            </p>
            <Input
              value={location}
              onChange={(event) => setLocation(event.target.value)}
              placeholder="enter location"
              onKeyDown={searchLocation}
              type="text"
            ></Input>
          </Flex>
        )}

        {!input &&
          weather.map((w, index) => {
            return (
              <Flex key={index}>
                <h1>You entered "{data.name}".</h1>
                <Info>
                  {data.name}'s current weather: {w.description}
                </Info>
                {/* <div>{w.main}</div> */}
              </Flex>
            );
          })}
        {!input && (
          <Flex>
            <Info>The temperature is {main.temp}&#8451;.</Info>
            <Info>It feels like {main.feels_like}&#8451;.</Info>

            <Info>The wind speed is {wind.speed}m/s.</Info>
            <Button
              onClick={() => {
                setInput(true);
              }}
            >
              Search Another Location
            </Button>
          </Flex>
        )}
      </main>
    </>
  );
}
